
var player;
var playerInstance;
var current_podcast;








$(function() {
    
    var play_url = function(podcast, player) {
	    var time;
	    if(player) 
	    	time = '&time='+player.data("jPlayer").status.currentTime;
	    else 
	    	time = '';
		return '/play.js?id='+ podcast.data('id')+time;
	}

	var play  = function(current_podcast) {
	    $.ajax({
				url: play_url(current_podcast, player)
		});
	}

	var getNext = function( current_podcast) {
		return current_podcast.parent().next().children('li');
	}

	var getPrev = function( current_podcast) {
		return current_podcast.parent().prev().children('li');
	}


	// $(document).on('click','.podcast', function() {
	// 		var $this = $(this);

	// 		// Show Pause button first
	// 		$('#jp-pause').show();
	// 		if(player == null) {
	// 			player = $("#jquery_jplayer_1").jPlayer({
	// 		        ready: function () {
	// 		           $(this).jPlayer("setMedia", {
	// 		                m4a: $this.data('link')
	// 		            }).jPlayer("play"); // auto play
	// 		        },
	// 		        solution: " html, flash",
	// 		        swfPath: "./Jplayer.swf",
	// 		        supplied: "m4a"
	// 	      }); 

	// 	} 
	// 	else {
	// 		player.jPlayer("setMedia", {
	//                 m4a: $this.data('link')
	//             }).jPlayer("play"); // auto play
	// 	}
		
 //    playerInstance = $('#playerInstance').clone();
	// console.log($this.data('link'));

	// });


	$(document).on('click.podcast', '.podcast_item', function(e){
		e.preventDefault();
		current_podcast = $(this);
		play(current_podcast);
	});




    $(document).on('click', '.jp-next', function(){
      
        if ( current_podcast.next().data('id') != null) {
	    	current_podcast = current_podcast.next();
	    	play(current_podcast);
		}
		else if (getNext(current_podcast).data('id') != null) 
		{
			current_podcast = getNext(current_podcast);
			play(current_podcast);

		}

    });

     $(document).on('click', '.jp-previous', function(){
	 	 if ( current_podcast.prev().data('id') != null) {
	     	current_podcast = current_podcast.prev();
			play(current_podcast);
	 	 } 
	 	 else if (getPrev(current_podcast).data('id') != null) 
		{
			current_podcast = getPrev(current_podcast);
			play(current_podcast);
		}
    });

});

